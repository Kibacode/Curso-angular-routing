{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.user$.pipe(map(user => {\n      if (user?.role === 'admin') {\n        return true;\n      } else {\n        this.router.navigate(['/home']);\n        return false;\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SACEA,sBAAsB,EAEtBC,MAAM,EACNC,mBAAmB,EACnBC,OAAO,QACF,iBAAiB;AAExB,SAASC,GAAG,QAAQ,gBAAgB;;;;AAOpC,OAAM,MAAOC,UAAU;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,OAAO,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACC,IAAI,CAChCT,GAAG,CAAEU,IAAI,IAAI;MACX,IAAIA,IAAI,EAAEC,IAAI,KAAK,OAAO,EAAE;QAC1B,OAAO,IAAI;OACZ,MAAM;QACL,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,KAAK;;IAEhB,CAAC,CAAC,CACH;EACH;EAAC;qBArBUX,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAY,SAAVZ,UAAU;IAAAa,YAFT;EAAM","names":["ActivatedRouteSnapshot","Router","RouterStateSnapshot","UrlTree","map","AdminGuard","constructor","authService","router","canActivate","route","state","user$","pipe","user","role","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/kibacode/Cursos Platzi/Angular-router/src/app/guards/admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this.authService.user$.pipe(\n      map((user) => {\n        if (user?.role === 'admin') {\n          return true;\n        } else {\n          this.router.navigate(['/home']);\n          return false;\n        }\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}