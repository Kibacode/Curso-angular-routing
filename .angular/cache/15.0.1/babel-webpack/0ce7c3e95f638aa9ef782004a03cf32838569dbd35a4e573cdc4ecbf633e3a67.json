{"ast":null,"code":"import { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/products.service\";\nimport * as i3 from \"../../components/products/products.component\";\nexport class CategoryComponent {\n  constructor(route, productsService) {\n    this.route = route;\n    this.productsService = productsService;\n    this.categoryId = null;\n    this.limit = 10;\n    this.offset = 0;\n    this.products = [];\n    this.route.paramMap.pipe(switchMap(params => {\n      this.categoryId = params.get('id');\n    })).subscribe(params => {\n      this.categoryId = params.get('id');\n      if (this.categoryId) {\n        this.productsService.getByCategory(this.categoryId, this.limit, this.offset).subscribe(data => {\n          this.products = data;\n          this.offset += this.limit;\n        });\n      }\n    });\n  }\n  onLoadMore() {\n    this.productsService.getAll(this.limit, this.offset).subscribe(data => {\n      this.products = this.products.concat(data);\n      this.offset += this.limit;\n    });\n  }\n  static #_ = this.ɵfac = function CategoryComponent_Factory(t) {\n    return new (t || CategoryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ProductsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryComponent,\n    selectors: [[\"app-category\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"products\", \"loadMore\"]],\n    template: function CategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-products\", 0);\n        i0.ɵɵlistener(\"loadMore\", function CategoryComponent_Template_app_products_loadMore_0_listener() {\n          return ctx.onLoadMore();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"products\", ctx.products);\n      }\n    },\n    dependencies: [i3.ProductsComponent],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,QAAQ,gBAAgB;;;;;AAS1C,OAAM,MAAOC,iBAAiB;EAO5BC,YACUC,KAAqB,EACrBC,eAAgC;IADhC,UAAK,GAALD,KAAK;IACL,oBAAe,GAAfC,eAAe;IARzB,eAAU,GAAkB,IAAI;IAChC,UAAK,GAAG,EAAE;IACV,WAAM,GAAG,CAAC;IAEV,aAAQ,GAAc,EAAE;IAMtB,IAAI,CAACD,KAAK,CAACE,QAAQ,CAChBC,IAAI,CACHN,SAAS,CAAEO,MAAM,IAAI;MACnB,IAAI,CAACC,UAAU,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC,CACH,CACAC,SAAS,CAAEH,MAAM,IAAI;MACpB,IAAI,CAACC,UAAU,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MAClC,IAAI,IAAI,CAACD,UAAU,EAAE;QACnB,IAAI,CAACJ,eAAe,CACjBO,aAAa,CAAC,IAAI,CAACH,UAAU,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC,CACvDH,SAAS,CAAEI,IAAI,IAAI;UAClB,IAAI,CAACC,QAAQ,GAAGD,IAAI;UACpB,IAAI,CAACD,MAAM,IAAI,IAAI,CAACD,KAAK;QAC3B,CAAC,CAAC;;IAER,CAAC,CAAC;EACN;EAEAI,UAAU;IACR,IAAI,CAACZ,eAAe,CAACa,MAAM,CAAC,IAAI,CAACL,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC,CAACH,SAAS,CAAEI,IAAI,IAAI;MACtE,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACG,MAAM,CAACJ,IAAI,CAAC;MAC1C,IAAI,CAACD,MAAM,IAAI,IAAI,CAACD,KAAK;IAC3B,CAAC,CAAC;EACJ;EAAC;qBAnCUX,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAAkB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZ9BC,uCAA8D;QAA1BA;UAAA,OAAYC,gBAAY;QAAA,EAAC;QAAED,iBAAe;;;QAAhEA,uCAAqB","names":["switchMap","CategoryComponent","constructor","route","productsService","paramMap","pipe","params","categoryId","get","subscribe","getByCategory","limit","offset","data","products","onLoadMore","getAll","concat","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/kibacode/Cursos Platzi/Angular-router/src/app/pages/category/category.component.ts","/Users/kibacode/Cursos Platzi/Angular-router/src/app/pages/category/category.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Product } from 'src/app/models/product.model';\nimport { switchMap } from 'rxjs/operators';\n\nimport { ProductsService } from 'src/app/services/products.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss'],\n})\nexport class CategoryComponent {\n  categoryId: string | null = null;\n  limit = 10;\n  offset = 0;\n\n  products: Product[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private productsService: ProductsService\n  ) {\n    this.route.paramMap\n      .pipe(\n        switchMap((params) => {\n          this.categoryId = params.get('id');\n        })\n      )\n      .subscribe((params) => {\n        this.categoryId = params.get('id');\n        if (this.categoryId) {\n          this.productsService\n            .getByCategory(this.categoryId, this.limit, this.offset)\n            .subscribe((data) => {\n              this.products = data;\n              this.offset += this.limit;\n            });\n        }\n      });\n  }\n\n  onLoadMore() {\n    this.productsService.getAll(this.limit, this.offset).subscribe((data) => {\n      this.products = this.products.concat(data);\n      this.offset += this.limit;\n    });\n  }\n}\n","<app-products [products]=\"products\" (loadMore)=\"onLoadMore()\"> </app-products>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}