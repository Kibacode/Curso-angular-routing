{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  constructor(storeService, productsService) {\n    this.storeService = storeService;\n    this.productsService = productsService;\n    this.myShoppingCart = [];\n    this.total = 0;\n    this.products = [];\n    this.loadMore = new EventEmitter();\n    this.showProductDetail = false;\n    this.productChosen = null;\n    this.statusDetail = 'init';\n    this.myShoppingCart = this.storeService.getShoppingCart();\n  }\n  // @Input() productId: string | null = null;\n  set productId(id) {\n    if (id) {\n      this.onShowDetail(id);\n    }\n  }\n  onAddToShoppingCart(product) {\n    this.storeService.addProduct(product);\n    this.total = this.storeService.getTotal();\n  }\n  toggleProductDetail() {\n    this.showProductDetail = !this.showProductDetail;\n  }\n  onShowDetail(id) {\n    this.statusDetail = 'loading';\n    if (!this.showProductDetail) {\n      this.showProductDetail = true;\n    }\n    this.productsService.getOne(id).subscribe(data => {\n      this.productChosen = data;\n      this.statusDetail = 'success';\n    }, errorMsg => {\n      window.alert(errorMsg);\n      this.statusDetail = 'error';\n    });\n  }\n  createNewProduct() {\n    const product = {\n      title: 'Nuevo prodcuto',\n      description: 'bla bla bla',\n      images: [`https://placeimg.com/640/480/any?random=${Math.random()}`],\n      price: 1000,\n      categoryId: 2\n    };\n    this.productsService.create(product).subscribe(data => {\n      this.products.unshift(data);\n    });\n  }\n  updateProduct() {\n    if (this.productChosen) {\n      const changes = {\n        title: 'change title'\n      };\n      const id = this.productChosen?.id;\n      this.productsService.update(id, changes).subscribe(data => {\n        const productIndex = this.products.findIndex(item => item.id === this.productChosen?.id);\n        this.products[productIndex] = data;\n        this.productChosen = data;\n      });\n    }\n  }\n  deleteProduct() {\n    if (this.productChosen) {\n      const id = this.productChosen?.id;\n      this.productsService.delete(id).subscribe(() => {\n        const productIndex = this.products.findIndex(item => item.id === this.productChosen?.id);\n        this.products.splice(productIndex, 1);\n        this.showProductDetail = false;\n      });\n    }\n  }\n  onLoadMore() {\n    this.loadMore.emit();\n  }\n};\n__decorate([Input()], ProductsComponent.prototype, \"products\", void 0);\n__decorate([Input()], ProductsComponent.prototype, \"productId\", null);\n__decorate([Output()], ProductsComponent.prototype, \"loadMore\", void 0);\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":"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","names":["Component","EventEmitter","Input","Output","ProductsComponent","constructor","storeService","productsService","myShoppingCart","getShoppingCart","productId","id","onShowDetail","onAddToShoppingCart","product","addProduct","total","getTotal","toggleProductDetail","showProductDetail","statusDetail","getOne","subscribe","data","productChosen","errorMsg","window","alert","createNewProduct","title","description","images","Math","random","price","categoryId","create","products","unshift","updateProduct","changes","update","productIndex","findIndex","item","deleteProduct","delete","splice","onLoadMore","loadMore","emit","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/kibacode/Cursos Platzi/Angular-router/src/app/components/products/products.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ProductsService } from 'src/app/services/products.service';\n\nimport {\n  Product,\n  CreateProductDTO,\n  UpdateProductDTO,\n} from '../../../models/product.model';\n\nimport { StoreService } from '../../../services/store.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss'],\n})\nexport class ProductsComponent {\n  myShoppingCart: Product[] = [];\n  total = 0;\n  @Input() products: Product[] = [];\n  // @Input() productId: string | null = null;\n  @Input() set productId(id: string | null) {\n    if (id) {\n      this.onShowDetail(id);\n    }\n  }\n  @Output() loadMore = new EventEmitter();\n  showProductDetail = false;\n  productChosen: Product | null = null;\n\n  statusDetail: 'loading' | 'success' | 'error' | 'init' = 'init';\n\n  constructor(\n    private storeService: StoreService,\n    private productsService: ProductsService\n  ) {\n    this.myShoppingCart = this.storeService.getShoppingCart();\n  }\n\n  onAddToShoppingCart(product: Product) {\n    this.storeService.addProduct(product);\n    this.total = this.storeService.getTotal();\n  }\n\n  toggleProductDetail() {\n    this.showProductDetail = !this.showProductDetail;\n  }\n\n  onShowDetail(id: string) {\n    this.statusDetail = 'loading';\n    if (!this.showProductDetail) {\n      this.showProductDetail = true;\n    }\n    this.productsService.getOne(id).subscribe(\n      (data) => {\n        this.productChosen = data;\n        this.statusDetail = 'success';\n      },\n      (errorMsg) => {\n        window.alert(errorMsg);\n        this.statusDetail = 'error';\n      }\n    );\n  }\n\n  createNewProduct() {\n    const product: CreateProductDTO = {\n      title: 'Nuevo prodcuto',\n      description: 'bla bla bla',\n      images: [`https://placeimg.com/640/480/any?random=${Math.random()}`],\n      price: 1000,\n      categoryId: 2,\n    };\n    this.productsService.create(product).subscribe((data) => {\n      this.products.unshift(data);\n    });\n  }\n\n  updateProduct() {\n    if (this.productChosen) {\n      const changes: UpdateProductDTO = {\n        title: 'change title',\n      };\n      const id = this.productChosen?.id;\n      this.productsService.update(id, changes).subscribe((data) => {\n        const productIndex = this.products.findIndex(\n          (item) => item.id === this.productChosen?.id\n        );\n        this.products[productIndex] = data;\n        this.productChosen = data;\n      });\n    }\n  }\n\n  deleteProduct() {\n    if (this.productChosen) {\n      const id = this.productChosen?.id;\n      this.productsService.delete(id).subscribe(() => {\n        const productIndex = this.products.findIndex(\n          (item) => item.id === this.productChosen?.id\n        );\n        this.products.splice(productIndex, 1);\n        this.showProductDetail = false;\n      });\n    }\n  }\n\n  onLoadMore() {\n    this.loadMore.emit();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}