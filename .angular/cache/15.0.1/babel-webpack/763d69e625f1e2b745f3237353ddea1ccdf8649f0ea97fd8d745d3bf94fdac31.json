{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../services/token.service\";\nexport class AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n    this.user = new BehaviorSubject(null);\n    this.user$ = this.user.asObservable();\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(response => this.tokenService.saveToken(response.access_token)));\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`).pipe(switchMap(user => this.user.next(user)));\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n  logOut() {\n    this.tokenService.removeToken();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAqB,sBAAsB;AAC9D,SAASC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAE/C,SAASC,WAAW,QAAQ,kCAAkC;AAI9D,SAASC,eAAe,QAAQ,MAAM;;;;AAKtC,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IANlD,WAAM,GAAG,GAAGL,WAAW,CAACM,OAAO,WAAW;IAE1C,SAAI,GAAG,IAAIL,eAAe,CAAc,IAAI,CAAC;IAErD,UAAK,GAAG,IAAI,CAACM,IAAI,CAACC,YAAY,EAAE;EAE2C;EAE3EC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACP,IAAI,CACbQ,IAAI,CAAO,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAE,CAAC,CACvDG,IAAI,CACHf,GAAG,CAAEgB,QAAQ,IAAK,IAAI,CAACV,YAAY,CAACW,SAAS,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC,CACtE;EACL;EAEAC,UAAU;IACR,OAAO,IAAI,CAACd,IAAI,CACbe,GAAG,CAAO,GAAG,IAAI,CAACN,MAAM,UAAU,CAAC,CACnCC,IAAI,CAAChB,SAAS,CAAES,IAAI,IAAK,IAAI,CAACA,IAAI,CAACa,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC;EACpD;EAEAc,WAAW,CAACX,KAAa,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACF,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAACG,IAAI,CAAChB,SAAS,CAAC,MAAM,IAAI,CAACoB,UAAU,EAAE,CAAC,CAAC;EAC7E;EAEAI,MAAM;IACJ,IAAI,CAACjB,YAAY,CAACkB,WAAW,EAAE;EACjC;EAAC;qBA7BUrB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAsB,SAAXtB,WAAW;IAAAuB,YAFV;EAAM","names":["HttpClient","switchMap","tap","environment","BehaviorSubject","AuthService","constructor","http","tokenService","API_URL","user","asObservable","login","email","password","post","apiUrl","pipe","response","saveToken","access_token","getProfile","get","next","loginAndGet","logOut","removeToken","factory","providedIn"],"sourceRoot":"","sources":["/Users/kibacode/Cursos Platzi/Angular-router/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { Auth } from './../models/auth.model';\nimport { User } from './../models/user.model';\nimport { TokenService } from './../services/token.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = `${environment.API_URL}/api/auth`;\n\n  private user = new BehaviorSubject<User | null>(null);\n\n  user$ = this.user.asObservable();\n\n  constructor(private http: HttpClient, private tokenService: TokenService) {}\n\n  login(email: string, password: string) {\n    return this.http\n      .post<Auth>(`${this.apiUrl}/login`, { email, password })\n      .pipe(\n        tap((response) => this.tokenService.saveToken(response.access_token))\n      );\n  }\n\n  getProfile() {\n    return this.http\n      .get<User>(`${this.apiUrl}/profile`)\n      .pipe(switchMap((user) => this.user.next(user)));\n  }\n\n  loginAndGet(email: string, password: string) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n\n  logOut() {\n    this.tokenService.removeToken();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}