{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../services/token.service\";\nexport class AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n    this.user = new BehaviorSubject(null);\n    this.user$ = this.user.asObservable();\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(response => this.tokenService.saveToken(response.access_token)));\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`).pipe(tap(user => this.user.next(user)));\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n  logOut() {\n    this.tokenService.removeToken();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}