{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/token.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(tokenService, router, authService) {\n    this.tokenService = tokenService;\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    // const token = this.tokenService.getToken();\n    // if (!token) {\n    //   this.router.navigate(['/home']);\n    //   return false;\n    // }\n    // return true;\n    return this.authService.user$.pipe(map(user => {\n      if (!user) {\n        this.router.navigate(['/home']);\n        return false;\n      } else {\n        return true;\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.TokenService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}