{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../services/token.service\";\nexport class AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(response => this.tokenService.saveToken(response.access_token)));\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`);\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n  logOut() {\n    this.tokenService.removeToken();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAqB,sBAAsB;AAC9D,SAASC,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAE/C,SAASC,WAAW,QAAQ,kCAAkC;;;;AAQ9D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAFlD,WAAM,GAAG,GAAGJ,WAAW,CAACK,OAAO,WAAW;EAEyB;EAE3EC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACL,IAAI,CACbM,IAAI,CAAO,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAE,CAAC,CACvDG,IAAI,CACHZ,GAAG,CAAEa,QAAQ,IAAK,IAAI,CAACR,YAAY,CAACS,SAAS,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC,CACtE;EACL;EAEAC,UAAU;IACR,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACN,MAAM,UAAU,CAAC;EACtD;EAEAO,WAAW,CAACV,KAAa,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACF,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAACG,IAAI,CAACb,SAAS,CAAC,MAAM,IAAI,CAACiB,UAAU,EAAE,CAAC,CAAC;EAC7E;EAEAG,MAAM;IACJ,IAAI,CAACd,YAAY,CAACe,WAAW,EAAE;EACjC;EAAC;qBAvBUlB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAmB,SAAXnB,WAAW;IAAAoB,YAFV;EAAM","names":["HttpClient","switchMap","tap","environment","AuthService","constructor","http","tokenService","API_URL","login","email","password","post","apiUrl","pipe","response","saveToken","access_token","getProfile","get","loginAndGet","logOut","removeToken","factory","providedIn"],"sourceRoot":"","sources":["/Users/kibacode/Cursos Platzi/Angular-router/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { Auth } from './../models/auth.model';\nimport { User } from './../models/user.model';\nimport { TokenService } from './../services/token.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = `${environment.API_URL}/api/auth`;\n\n  constructor(private http: HttpClient, private tokenService: TokenService) {}\n\n  login(email: string, password: string) {\n    return this.http\n      .post<Auth>(`${this.apiUrl}/login`, { email, password })\n      .pipe(\n        tap((response) => this.tokenService.saveToken(response.access_token))\n      );\n  }\n\n  getProfile() {\n    return this.http.get<User>(`${this.apiUrl}/profile`);\n  }\n\n  loginAndGet(email: string, password: string) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n\n  logOut() {\n    this.tokenService.removeToken();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}