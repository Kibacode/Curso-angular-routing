{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent, HttpContext, HttpContextToken } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nconst CHECK_TIME = new HttpContextToken(() => false);\nexport function checkTime() {\n  return new HttpContext().set(CHECK_TIME, true);\n}\nexport class TimeInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    if (request.context.get(CHECK_TIME)) {\n      const start = performance.now();\n      return next.handle(request).pipe(tap(() => {\n        const time = performance.now() - start + 'ms';\n        console.log(request.url, time);\n      }));\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function TimeInterceptor_Factory(t) {\n    return new (t || TimeInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TimeInterceptor,\n    factory: TimeInterceptor.ɵfac\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}