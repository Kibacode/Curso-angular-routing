{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/token.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(tokenService, router) {\n    this.tokenService = tokenService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const token = this.tokenService.getToken();\n    if (!token) {\n      this.router.navigate(['/home']);\n      return false;\n    }\n    return true;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.TokenService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SACEA,sBAAsB,EAEtBC,mBAAmB,EACnBC,OAAO,QACF,iBAAiB;;;;AAQxB,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;EAAW;EACzEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,MAAMC,KAAK,GAAG,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;IAC1C,IAAI,CAACD,KAAK,EAAE;MACV,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;IAGd,OAAO,IAAI;EACb;EAAC;qBAjBUT,SAAS;EAAA;EAAA;WAATA,SAAS;IAAAU,SAATV,SAAS;IAAAW,YAFR;EAAM","names":["ActivatedRouteSnapshot","RouterStateSnapshot","UrlTree","AuthGuard","constructor","tokenService","router","canActivate","route","state","token","getToken","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/kibacode/Cursos Platzi/Angular-router/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { TokenService } from '../services/token.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private tokenService: TokenService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const token = this.tokenService.getToken();\n    if (!token) {\n      this.router.navigate(['/home']);\n      return false;\n    }\n\n    return true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}